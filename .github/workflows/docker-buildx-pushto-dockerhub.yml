name: Multi-architecture Build Status

on:
  push:
    branches: 
    - master
    paths-ignore: #this ensures auto rebuilds don't occure when README.md is updated or the seperate workflow for updating descriptions and readme is modifies
        - 'README.md'
        - '.github/workflows/update-dockerhub-description-readme.yml'
  
jobs:
  buildx:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout 
        uses: actions/checkout@v2

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
        with:
          platforms: linux/amd64,linux/arm64,linux/arm/v7,linux/ppc64le,linux/s390x #set to architectures supported by the FROM image in your dockerfile 

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1
        with:
          version: latest
          
 #       removing caching, seems to do little to nothing in this sceanrio
 #     - name: Cache Docker layers #cache layers on first run, these will be reused on later runs if layers have not been changed to speed up build
 #       uses: actions/cache@v2
 #       with:
 #         path: /tmp/.buildx-cache
 #         key: ${{ runner.os }}-buildx-${{ github.sha }}
 #         restore-keys: |
 #           ${{ runner.os }}-buildx-

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }} #set these secrets in your guthub account
          password: ${{ secrets.DOCKERHUB_TOKEN }} #set these secrets in your github account

      - name: Available_platforms 
        run: echo ${{ steps.buildx.outputs.platforms }} #this is for logging

      - name: Builder instance name
        run: echo ${{ steps.buildx.outputs.name }} #this is for logging

      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          push: true
          platforms: ${{ steps.buildx.outputs.platforms }} #this builds one tag per architecture platforms you specified in the set up QEMU.
          tags: scyto/infinitude:latest #set to the dockerhub repo this will be pushed to
 #         cache-from: type=local,src=/tmp/.buildx-cache
 #         cache-to: type=local,dest=/tmp/.buildx-cache
     
      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }} #this is for logging.
        
